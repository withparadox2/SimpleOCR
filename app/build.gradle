apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildTool
    defaultConfig {
        applicationId "com.withparadox2.simpleocr"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode buildConfig.version.code
        versionName buildConfig.version.name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def propsFile = rootProject.file('keystore.properties')
    def props = new Properties()
    props.load(new FileInputStream(propsFile))

    signingConfigs {
        releaseKey {
            storeFile file(props['storeFile'])
            storePassword props['storePassword']
            keyAlias props['keyAlias']
            keyPassword props['keyPassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseKey
        }
        debug {
            signingConfig signingConfigs.releaseKey
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation dep.kotlin.stdlib.jdk
    implementation dep.kotlin.coroutines.jdk
    implementation dep.kotlin.coroutines.android
    implementation dep.android.x.core
    implementation dep.android.x.appcompat
    implementation dep.android.x.constraintlayout
    implementation dep.retrofit.core
    implementation dep.retrofit.converter.gson
    implementation dep.retrofit.converter.scalar
    implementation dep.android.room.runtime
    kapt dep.android.room.compiler
    implementation dep.android.lifecycle.ext
    kapt dep.android.lifecycle.compiler
    implementation project(":ibaselib")

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def debugTemplate = properties.getProperty('debug.template')
    if (!debugTemplate?.isEmpty()) {
        implementation project(":${debugTemplate}")
    }
}